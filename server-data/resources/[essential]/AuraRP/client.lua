Config = {
	Visuals = {
		["heightReflect.width"] = 10.0,
		["heightReflect.height"] = 22.0,
		["rain.NumberParticles"] = 128.0,
		["rain.UseLitShader"] = 0.0,
		["heightReflect.specularoffset"] = 0.05,
		["sky.cloudInscatteringRange"] = 0.0,
		["sky.cloudEdgeSmooth"] = 0.0,
		["sky.GameCloudSpeed"] = 0.5,
		["shadows.cloudtexture.rangemax"] = 0.0,
		["car.interiorlight.color.blue"] = 5.7,
		["car.interiorlight.intensity"] = 2.5,
		["car.platelight.color.blue"] = 5.0,
		["car.platelight.intensity"] = 1.5,
		["car.dashlight.color.blue"] = 3.6,
		["car.doorlight.color.blue"] = 6.95,
		["car.taxi.intensity"] = 1.0,
		["car.headlights.global.HeadlightIntensityMult"] = 3.55,
		["car.headlights.global.HeadlightDistMult"] = 3.8,
		["car.headlights.fullbeam.DistMult"] = 3.5,
		["car.headlights.fullbeam.CoronaIntensityMult"] = 1.9,
		["car.headlights.fullbeam.CoronaSizeMult"] = 1.8,
		["car.headlights.player.intensitymult"] = 1.1,
		["car.headlights.player.distmult"] = 0.45,
		["car.headlights.useDynamicShadows"] = 1.0,
		["car.coronas.CutoffStart"] = 280.0,
		["car.sirens.ShadowFade"] = 35.0,
		["car.sirens.intensity"] = 75.0,
		["car.sirens.radius"] = 50.0,
		["plane.luxe2.cabin.useDynamicShadows"] = 1.0,
		["heli.swift2.cabin.useDynamicShadows"] = 1.0,
		["sub.lightOne.color.red"] = 1.0,
		["sub.lightOne.color.green"] = 1.0,
		["sub.lightOne.intensity"] = 0.0,
		["sub.lightOne.radius"] = 1.0,
		["sub.lightOne.outerConeAngle"] = 45.0,
		["sub.lightTwo.color.red"] = 1.0,
		["sub.lightTwo.color.blue"] = 1.0,
		["sub.lightTwo.intensity"] = 0.0,
		["sub.lightTwo.radius"] = 1.0,
		["sub.lightTwo.outerConeAngle"] = 45.0,
		["train.light.fadelength"] = 20.0,
		["car.headlight.day.emissive.on"] = 208.0,
		["car.headlight.night.emissive.on"] = 109.0,
		["car.headlight.day.emissive.off"] = 0.001,
		["car.headlight.night.emissive.off"] = 0.001,
		["car.taillight.day.emissive.on"] = 65.0,
		["car.taillight.night.emissive.on"] = 65.0,
		["car.taillight.day.emissive.off"] = 0.001,
		["car.taillight.night.emissive.off"] = 0.001,
		["car.indicator.day.emissive.on"] = 135.0,
		["car.indicator.night.emissive.on"] = 116.0,
		["car.indicator.day.emissive.off"] = 0.001,
		["car.indicator.night.emissive.off"] = 0.001,
		["car.reversinglight.day.emissive.on"] = 19.0,
		["car.reversinglight.night.emissive.on"] = 9.0,
		["car.reversinglight.day.emissive.off"] = 0.001,
		["car.reversinglight.night.emissive.off"] = 0.001,
		["car.brakelight.day.emissive.on"] = 150.0,
		["car.brakelight.night.emissive.on"] = 135.0,
		["car.brakelight.day.emissive.off"] = 0.001,
		["car.brakelight.night.emissive.off"] = 0.001,
		["car.middlebrakelight.day.emissive.on"] = 150.0,
		["car.middlebrakelight.night.emissive.on"] = 135.0,
		["car.middlebrakelight.day.emissive.off"] = 0.001,
		["car.middlebrakelight.night.emissive.off"] = 0.001,
		["car.extralight.day.emissive.on"] = 160.0,
		["car.extralight.night.emissive.on"] = 90.0,
		["car.extralight.day.emissive.off"] = 0.001,
		["car.extralight.night.emissive.off"] = 0.001,
		["car.emissiveMultiplier"] = 2.021,
		["car.lod.distance.high"] = 55.0,
		["car.lod.distance.low"] = 210.0,
		["boat.intensity"] = 5.0,
		["train.light.intensity"] = 1.0,
		["train.light.fadingdistance"] = 50.0,
		["defaultsearchlight.mainLightInfo.globalIntensity"] = 2.0,
		["trafficLight.near.intensity"] = 0.0,
		["trafficLight.near.radius"] = 0.0,
		["trafficLight.near.outerConeAngle"] = 20.0,
		["trafficLight.near.coronaHDR"] = 2.0,
		["trafficLight.near.coronaSize"] = 0.0,
		["trafficLight.farFadeStart"] = 200.0,
		["trafficLight.farFadeEnd"] = 250.0,
		["trafficLight.nearFadeStart"] = 100.0,
		["trafficLight.nearFadeEnd"] = 130.0,
		["imposter.color.blendRange"] = 0.0,
		["imposter.color.blendBias"] = 0.0,
		["imposter.color.size1"] = 0.0,
		["imposter.color.amt1"] = 0.0,
		["imposter.color.size2"] = 0.0,
		["imposter.color.amt2"] = 0.0,
		["imposter.backgroundColor.red"] = 0.0,
		["imposter.backgroundColor.green"] = 0.0,
		["imposter.backgroundColor.blue"] = 0.0,
		["imposter.shadow.blendRange"] = 0.0,
		["imposter.shadow.blendBias"] = 0.0,
		["imposter.shadow.size1"] = 0.0,
		["imposter.shadow.amt1"] = 0.0,
		["imposter.shadow.size2"] = 0.0,
		["imposter.shadow.amt2"] = 0.0,
		["ped.ambientvolume.fadestart"] = 12.0,
		["ped.ambientvolume.fadeend"] = 16.0,
		["distantlights.size"] = 0.6,
		["distantlights.sizeReflections"] = 0.0,
		["distantlights.sizeMin"] = 0.8,
		["distantlights.sizeUpscale"] = 8.0,
		["distantlights.sizeUpscaleReflections"] = 0.0,
		["distantlights.flicker"] = 0.2,
		["distantlights.carlight.HDRIntensity"] = 0.0,
		["distantlights.streetlight.HDRIntensity"] = 19.0,
		["distantlights.streetlight.color.green"] = 0.43,
		["misc.DOFBlurMultiplier.HD"] = 0.0,
		["misc.DOFBlurMultiplier.SD"] = 0.0,
		["misc.Multiplier.nearFogMultiplier"] = 0.0,
		["misc.3dMarkers.FrontLightIntensity"] = 2.0,
		["misc.3dMarkers.frontLightExponent"] = 12.0,
		["misc.coronas.sizeScaleGlobal"] = 1.25,
		["misc.coronas.intensityScaleGlobal"] = 0.0,
		["misc.coronas.intensityScaleWater"] = 0.0,
		["misc.coronas.sizeScaleWater"] = 0.0,
		["misc.coronas.screenspaceExpansionWater"] = 0.0,
		["misc.coronas.zBiasMultiplier"] = 25.0,
		["misc.coronas.zBias.fromFinalSizeMultiplier"] = 0.1,
		["misc.coronas.underwaterFadeDist"] = 2.0,
		["misc.coronas.screenEdgeMinDistForFade"] = 0.0,
		["misc.CrossPMultiplier.RimLight"] = 0.0,
		["misc.CrossPMultiplier.GlobalEnvironmentReflection"] = 0.0,
		["misc.CrossPMultiplier.MidBlur"] = 0.0,
		["misc.CrossPMultiplier.Farblur"] = 0.0,
		["misc.CrossPMultiplier.Desaturation"] = 1.20,
		["misc.HiDof.nearBlur"] = 0.0,
		["misc.HiDof.midBlur"] = 0.0,
		["misc.HiDof.farBlur"] = 0.0,
		["misc.cutscene.nearBlurMin"] = 0.0,
		["misc.MoonDimMult"] = 0.0,
		["Tonemapping.bright.filmic.A"] = 0.3,
		["Tonemapping.bright.filmic.B"] = 0.23,
		["Tonemapping.bright.filmic.C"] = 0.1,
		["Tonemapping.bright.filmic.D"] = 0.2,
		["Tonemapping.bright.filmic.E"] = 0.01,
		["Tonemapping.bright.filmic.F"] = 0.3,
		["Tonemapping.bright.filmic.W"] = 4.0,
		["Tonemapping.dark.filmic.A"] = 0.3,
		["Tonemapping.dark.filmic.B"] = 0.23,
		["Tonemapping.dark.filmic.C"] = 0.2,
		["Adaptation.min.step.size"] = 0.0,
		["Adaptation.max.step.size"] = 19.9,
		["Adaptation.step.size.mult"] = 0.55,
		["Adaptation.sun.exposure.tweak"] = -3.0,
		["cloudgen.frequency"] = 1.0,
		["cloudgen.scale"] = 24.0,
		["cloudgen.edge.detail.scale"] = 4.0,
		["cloudgen.overlay.detail.scale"] = 2.0,
		["cloud.speed.small"] = 4.0,
		["lod.fadedist.orphanhd"] = 0.075,
		["rim.lighting.main.colour.intensity"] = 6.0,
		["bloom.blurblendmult.large"] = 0.3,
		["bloom.blurblendmult.med"] = 1.2,
		["bloom.blurblendmult.small"] = 0.6,
		["lodlight.corona.size"] = 1.75,
		["misc.brightlight.distculled.FadeStart"] = 200.0,
		["misc.brightlight.distculled.FadeEnd"] = 220.0,
		["misc.brightlight.notdistculled.FadeStart"] = 180.0,
		["misc.brightlight.notdistculled.FadeEnd"] = 235.0,
		["vehicle.lights.sunrise"] = 5.5,
		["vehicle.lights.sunset"] = 21.0,
		["vehicle.lights.fadeDistance.main"] = 250.0,
		["vehicle.lights.fadeDistance.secondary"] = 250.0,
		["vehicle.lights.fadeDistance.sirens"] = 400.0,
		["vehicle.lights.fadeDistance.AO"] = 250.0,
		["vehicle.lights.fadeDistance.neon"] = 220.0,
		["vehicle.lights.fadeLength"] = 20.0,
		["particles.shadowintensity"] = 1.15,
		["dark.useNormal"] = 1.0,
		["dark.useVolumes"] = 1.0,
		["ped.light.fade.day.end"] = 6.1,
		["ped.light.fade.night.end"] = 20.1,
		["adaptivedof.day.near.nearin"] = 3.0,
		["lensflare.switch.length"] = 90.0,
		["lensflare.hide.length"] = 95.0,
		["lensflare.show.length"] = 64.0,
		["lensflare.desaturation.boost"] = 0.16
	},
	Density = {
		FiveSync = {
			CitizenDefault = 0.8,
			CitizenDriver = 0.8,
			CitizenPassengers = 0.8,
			VehicleDefault = 0.4,
			VehicleDriver = 0.4,
			VehiclePassengers = 0.4
		},
		OneSync = {
			CitizenDefault = 0.5,
			CitizenDriver = 0.5,
			CitizenPassengers = 0.5,
			VehicleDefault = 0.3,
			VehicleDriver = 0.3,
			VehiclePassengers = 0.3
		}
	},
	Scenarios = {
	  'WORLD_VEHICLE_ATTRACTOR',
	  'WORLD_VEHICLE_AMBULANCE',
	  'WORLD_VEHICLE_BOAT_IDLE',
	  'WORLD_VEHICLE_BOAT_IDLE_ALAMO',
	  'WORLD_VEHICLE_BOAT_IDLE_MARQUIS',
	  'WORLD_VEHICLE_BOAT_IDLE_MARQUIS',
	  'WORLD_VEHICLE_BROKEN_DOWN',
	  'WORLD_VEHICLE_BUSINESSMEN',
	  'WORLD_VEHICLE_HELI_LIFEGUARD',
	  'WORLD_VEHICLE_CLUCKIN_BELL_TRAILER',
	  'WORLD_VEHICLE_CONSTRUCTION_SOLO',
	  'WORLD_VEHICLE_CONSTRUCTION_PASSENGERS',
	  'WORLD_VEHICLE_DRIVE_PASSENGERS',
	  'WORLD_VEHICLE_DRIVE_PASSENGERS_LIMITED',
	  'WORLD_VEHICLE_DRIVE_SOLO',
	  'WORLD_VEHICLE_FARM_WORKER',
	  'WORLD_VEHICLE_FIRE_TRUCK',
	  'WORLD_VEHICLE_EMPTY',
	  'WORLD_VEHICLE_MARIACHI',
	  'WORLD_VEHICLE_MECHANIC',
	  'WORLD_VEHICLE_MILITARY_PLANES_BIG',
	  'WORLD_VEHICLE_MILITARY_PLANES_SMALL',
	  'WORLD_VEHICLE_PARK_PARALLEL',
	  'WORLD_VEHICLE_PARK_PERPENDICULAR_NOSE_IN',
	  'WORLD_VEHICLE_PASSENGER_EXIT',
	  'WORLD_VEHICLE_POLICE_BIKE',
	  'WORLD_VEHICLE_POLICE_CAR',
	  'WORLD_VEHICLE_POLICE',
	  'WORLD_VEHICLE_POLICE_NEXT_TO_CAR',
	  'WORLD_VEHICLE_QUARRY',
	  'WORLD_VEHICLE_SALTON',
	  'WORLD_VEHICLE_SALTON_DIRT_BIKE',
	  'WORLD_VEHICLE_SECURITY_CAR',
	  'WORLD_VEHICLE_STREETRACE',
	  'WORLD_VEHICLE_TOURBUS',
	  'WORLD_VEHICLE_TOURIST',
	  'WORLD_VEHICLE_TANDL',
	  'WORLD_VEHICLE_TRACTOR',
	  'WORLD_VEHICLE_TRACTOR_BEACH',
	  'WORLD_VEHICLE_TRUCK_LOGS',
	  'WORLD_VEHICLE_TRUCKS_TRAILERS',
	  'WORLD_VEHICLE_DISTANT_EMPTY_GROUND'
	},
	Scenario_Groups = {
        2017590552,
        2141866469, 
        1409640232,
        "ng_planes"
    },
   	Suppressed_Models = {
        "SHAMAL",
        "LUXOR",
        "LUXOR2",
        "JET",
        "LAZER",
        "TITAN",
        "BARRACKS",
        "BARRACKS2",
        "CRUSADER",
        "RHINO",
        "AIRTUG",
        "RIPLEY"
    },
	Drivebyjobs = {
		"vagos",
		"ballas",
		"cribs",
		"bloods",
		"groove",
		"lost",
		"marabunta",
		"yakuza"
  	},
  	Recoils = {
		[`WEAPON_PISTOL`] = 1.5,
		[`WEAPON_PISTOL50`] = 1.5, 
		[`WEAPON_PISTOL_MK2`] = 1.5,
		[`WEAPON_COMBATPISTOL`] = 1.5,
		[`WEAPON_SMG`] = 0.1,
		[`WEAPON_COMBATPDW`] = 0.1,
		[`WEAPON_APPISTOL`] = 0.20,
		[`WEAPON_SMG_MK2`] = 0.1,
		[`WEAPON_ASSAULTRIFLE`] = 0.2,
		[`WEAPON_CARBINERIFLE`] = 0.2,
		[`WEAPON_COMPACTRIFLE`] = 0.2,
		[`WEAPON_GUSENBERG`] = 0.1,
		[`WEAPON_PUMPSHOTGUN`] = 1.5,
		[`WEAPON_PUMPSHOTGUN_MK2`] = 1.5,
		[`WEAPON_SAWNOFFSHOTGUN`] = 1.5,
		[`WEAPON_STUNGUN`] = 0.1,
		[`WEAPON_SNIPERRIFLE`] = 0.5,
		[`WEAPON_SNSPISTOL`] = 1.5,
		[`WEAPON_SNSPISTOL_MK2`] = 1.5,
		[`WEAPON_SPECIALCARBINE`] = 0.2,
		[`WEAPON_HEAVYPISTOL`] = 0.7,
		[`WEAPON_VINTAGEPISTOL`] = 1.5,
		[`WEAPON_DOUBLEACTION`] = 1.5,
		[`WEAPON_MUSKET`] = 0.7,
		[`WEAPON_FLAREGUN`] = 0.9,
		[`WEAPON_DBSHOTGUN`] = 0.7
	},
	Effects = {
		[`WEAPON_PISTOL`] = 0.2,
		[`WEAPON_PISTOL50`] = 0.2, 
		[`WEAPON_PISTOL_MK2`] = 0.2,
		[`WEAPON_COMBATPISTOL`] = 0.2,
		[`WEAPON_SMG`] = 0.2,
		[`WEAPON_COMBATPDW`] = 0.2,
		[`WEAPON_APPISTOL`] = 0.2,
		[`WEAPON_SMG_MK2`] = 0.2,
		[`WEAPON_ASSAULTRIFLE`] = 0.2,
		[`WEAPON_CARBINERIFLE`] = 0.2,
		[`WEAPON_COMPACTRIFLE`] = 0.2,
		[`WEAPON_GUSENBERG`] = 0.2,
		[`WEAPON_PUMPSHOTGUN`] = 0.2,
		[`WEAPON_PUMPSHOTGUN_MK2`] = 0.2,
		[`WEAPON_SAWNOFFSHOTGUN`] = 0.2,
		[`WEAPON_STUNGUN`] = 0.2,
		[`WEAPON_SNIPERRIFLE`] = 0.2,
		[`WEAPON_SNSPISTOL`] = 0.2,
		[`WEAPON_SNSPISTOL_MK2`] = 0.2,
		[`WEAPON_SPECIALCARBINE`] = 0.2,
		[`WEAPON_HEAVYPISTOL`] = 0.2,
		[`WEAPON_VINTAGEPISTOL`] = 0.2,
		[`WEAPON_DOUBLEACTION`] = 0.2,
		[`WEAPON_MUSKET`] = 0.2,
		[`WEAPON_FLAREGUN`] = 0.2,
		[`WEAPON_DBSHOTGUN`] = 0.2
	},
	Blips = {
	    {title="Komenda Mission Row", colour=38, id=60, x= 444.45, y = -983.82, z = 80.72 },
	    {title="Komenda Vinewood", colour=38, id=60, x= 628.39, y = 4.85, z = 83.70 },
	    {title="Centrum Pracy", colour=24, id=498, x = -265.63, y = -962.84, z = 31.22-0.05 },
	    {title="Bank Pacific", colour=3, id=106, x= 246.58, y = 218.83, z = 106.28 },
	    {title="GSM", colour=2, id=459, x = -1081.74, y = -248.39, z = 37.76 },
	    {title="Plantacja Marihuany", colour=52, id=496, x = 2221.76, y = 5577.46, z = 53.83 },
	    {title="Weed Shop", colour=52, id=496, x = 378.60, y = -828.34, z = 29.30 },
	    {title="Sad", colour=52, id=85, x = 359.26, y = 6520.22, z = 28.26 },
	    {title="Winiarnia", colour=24, id=304, x = -1890.20, y = 2045.20, z = 140.86-0.05 },
	    {title="MEXA TRANS", colour=56, id=477, x = -65.76, y = -2522.72, z = 6.01-0.05 },
	    {title="Samolot", colour=81, id=423, x = -1044.68, y = -2749.59, z = 21.36-0.05 }
	},
	World = {
	    ["TITLE"] = "[PL] ~o~AuraRP~w~ : Glaros",
	    ["SUBTITLE"] = "~o~https://discord.gg/Qs7rpr7~w~",
	    ["APPID"] = "",
	    ["ASSET"] = ""
	},
	Zones = {
		['AIRP'] = 'Los Santos International Airport',
		['ALAMO'] = 'Alamo Sea',
		['ALTA'] = 'Alta',
		['ARMYB'] = 'Fort Zancudo',
		['BANHAMC'] = 'Banham Canyon Dr',
		['BANNING'] = 'Banning',
		['BEACH'] = 'Vespucci Beach',
		['BHAMCA'] = 'Banham Canyon',
		['BRADP'] = 'Braddock Pass',
		['BRADT'] = 'Braddock Tunnel',
		['BURTON'] = 'Burton',
		['CALAFB'] = 'Calafia Bridge',
		['CANNY'] = 'Raton Canyon',
		['CCREAK'] = 'Cassidy Creek',
		['CHAMH'] = 'Chamberlain Hills',
		['CHIL'] = 'Vinewood Hills',
		['CHU'] = 'Chumash',
		['CMSW'] = 'Chiliad Mountain State Wilderness',
		['CYPRE'] = 'Cypress Flats',
		['DAVIS'] = 'Davis',
		['DELBE'] = 'Del Perro Beach',
		['DELPE'] = 'Del Perro',
		['DELSOL'] = 'La Puerta',
		['DESRT'] = 'Grand Senora Desert',
		['DOWNT'] = 'Downtown',
		['DTVINE'] = 'Downtown Vinewood',
		['EAST_V'] = 'East Vinewood',
		['EBURO'] = 'El Burro Heights',
		['ELGORL'] = 'El Gordo Lighthouse',
		['ELYSIAN'] = 'Elysian Island',
		['GALFISH'] = 'Galilee',
		['GOLF'] = 'GWC and Golfing Society',
		['GRAPES'] = 'Grapeseed',
		['GREATC'] = 'Great Chaparral',
		['HARMO'] = 'Harmony',
		['HAWICK'] = 'Hawick',
		['HORS'] = 'Vinewood Racetrack',
		['HUMLAB'] = 'Humane Labs and Research',
		['JAIL'] = 'Bolingbroke Penitentiary',
		['KOREAT'] = 'Little Seoul',
		['LACT'] = 'Land Act Reservoir',
		['LAGO'] = 'Lago Zancudo',
		['LDAM'] = 'Land Act Dam',
		['LEGSQU'] = 'Legion Square',
		['LMESA'] = 'La Mesa',
		['LOSPUER'] = 'La Puerta',
		['MIRR'] = 'Mirror Park',
		['MORN'] = 'Morningwood',
		['MOVIE'] = 'Richards Majestic',
		['MTCHIL'] = 'Mount Chiliad',
		['MTGORDO'] = 'Mount Gordo',
		['MTJOSE'] = 'Mount Josiah',
		['MURRI'] = 'Murrieta Heights',
		['NCHU'] = 'North Chumash',
		['NOOSE'] = 'N.O.O.S.E',
		['OCEANA'] = 'Pacific Ocean',
		['PALCOV'] = 'Paleto Cove',
		['PALETO'] = 'Paleto Bay',
		['PALFOR'] = 'Paleto Forest',
		['PALHIGH'] = 'Palomino Highlands',
		['PALMPOW'] = 'Palmer-Taylor Power Station',
		['PBLUFF'] = 'Pacific Bluffs',
		['PBOX'] = 'Pillbox Hill',
		['PROCOB'] = 'Procopio Beach',
		['RANCHO'] = 'Rancho',
		['RGLEN'] = 'Richman Glen',
		['RICHM'] = 'Richman',
		['ROCKF'] = 'Rockford Hills',
		['RTRAK'] = 'Redwood Lights Track',
		['SANAND'] = 'San Andreas',
		['SANCHIA'] = 'San Chianski Mountain Range',
		['SANDY'] = 'Sandy Shores',
		['SKID'] = 'Mission Row',
		['SLAB'] = 'Stab City',
		['STAD'] = 'Maze Bank Arena',
		['STRAW'] = 'Strawberry',
		['TATAMO'] = 'Tataviam Mountains',
		['TERMINA'] = 'Terminal',
		['TEXTI'] = 'Textile City',
		['TONGVAH'] = 'Tongva Hills',
		['TONGVAV'] = 'Tongva Valley',
		['VCANA'] = 'Vespucci Canals',
		['VESP'] = 'Vespucci',
		['VINE'] = 'Vinewood',
		['WINDF'] = 'Ron Alternates Wind Farm',
		['WVINE'] = 'West Vinewood',
		['ZANCUDO'] = 'Zancudo River',
		['ZP_ORT'] = 'Port of South Los Santos',
		['ZQ_UAR'] = 'Davis Quartz'
	},
	Directions = { 
		[0] = 'N',
		[45] = 'NW',
		[90] = 'W',
		[135] = 'SW', 
		[180] = 'S', 
		[225] = 'SE', 
		[270] = 'E', 
		[315] = 'NE', 
		[360] = 'N' 
	},
	Characterchange = {
		x = -1044.68,
		y = -2749.59,
		z = 21.36
	}
}

local Ped = {
	Active = false,
	Id = 0,
	Alive = false,
	Available = false,
	Visible = false,
	InVehicle = false,
	OnFoot = false,
	Vehicle = nil,
	VehicleClass = nil,
	VehicleStopped = true,
	VehicleEngine = false,
	VehicleCurrentGear = nil,
	VehicleHighGear = nil,
	Ped = nil,
	Coords = nil,
	Zone = nil,
	Direction = nil,
	StreetLabel = {},
	CurrentTimeHours = nil,
	CurrentTimeMinutes = nil,
	ShowGears = false,
	currentFuel = nil,
	Health = 0,
	Armor = 0,
	Stamina = 0,
	Underwater = false,
	UnderwaterTime = 0,
	Driver = false,
	PhoneVisible = false,
}
local PlayerData = {}
local GUI = {}
local alreadyRegisted = false
local candodriveby = false
local allowid = false
local RPM = 0
local RPMTime = GetGameTimer()
local Status = true
local timehours = nil
local timeminutes = nil
local maxgear = nil
local seatbeltIsOn = false
local displayStreet = true
local DisableShuffle = true
local minSpeed = 20
local lockSpeed = false
local checkCruiseLock = 0
local enabled = false
local incharacterselection = false

ESX = nil
GUI.Time = 0

Citizen.CreateThread(function()
	while ESX == nil do
		TriggerEvent('esx:getSharedObject', function(obj) ESX = obj end)
		Citizen.Wait(0)
	end

	Citizen.Wait(5000)
	PlayerData = ESX.GetPlayerData()
end)

RegisterNetEvent('esx:playerLoaded')
AddEventHandler('esx:playerLoaded', function(xPlayer)
	PlayerData = xPlayer
	if PlayerData.job2 and isjobWhitelisted(PlayerData.job2.name) then
		candodriveby = true
	else
		candodriveby = false
	end
	allowid = true
end)

RegisterNetEvent('esx:setJob2')
AddEventHandler('esx:setJob2', function(job2)
	PlayerData.job2 = job2
	if PlayerData.job2 and isjobWhitelisted(PlayerData.job2.name) then
		candodriveby = true
	else
		candodriveby = false
	end
end)

AddEventHandler('playerSpawned', function()
	SetCanAttackFriendly(PlayerPedId(), true, false)
	NetworkSetFriendlyFireOption(true)
	DoScreenFadeOut(50)
	if not alreadyRegisted then
		TriggerServerEvent('bb-queue:removeConnected')
		alreadyRegisted = true
	end
	Citizen.Wait(1000)
	TriggerServerEvent('es:firstJoinProper')
	Citizen.Wait(1000)
	TriggerEvent('es:allowedToSpawn')
    SetTimecycleModifier('default')
    TriggerEvent('esx_customui:toggle',true)
    Wait(1000)
    TriggerEvent('esx_jail:shouldbeinjail')
    reloadskin()
    Wait(3000)
    ESX.TriggerServerCallback('esx_ambulancejob:getDeathStatus', function(isDead)
        if isDead then
            SetEntityHealth(GetPlayerPed(-1), 0)
        end
    end)
    DoScreenFadeIn(50)
end)

RegisterNetEvent('aurarp:displayid')
AddEventHandler('aurarp:displayid', function(status)
	if status then
		allowid = true
	else
		allowid = false
	end
end)

AddEventHandler('carhud:display', function(status)
	Status = status
end)

Citizen.CreateThread(function()
	SetRelationshipBetweenGroups(1, GetHashKey("AMBIENT_GANG_LOST"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("AMBIENT_GANG_HILLBILLY"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("AMBIENT_GANG_BALLAS"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("AMBIENT_GANG_MEXICAN"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("AMBIENT_GANG_FAMILY"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("AMBIENT_GANG_MARABUNTE"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("AMBIENT_GANG_SALVA"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("AMBIENT_GANG_WEICHENG"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("GANG_1"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("GANG_2"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("GANG_9"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("GANG_10"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("FIREMAN"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("MEDIC"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("COP"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("ARMY"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("DEALER"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("CIVMALE"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("HEN"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("PRIVATE_SECURITY"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("SECURITY_GUARD"), GetHashKey('PLAYER'))
	SetRelationshipBetweenGroups(1, GetHashKey("AGGRESSIVE_INVESTIGATE"), GetHashKey('PLAYER'))
end)

local idplayer = GetPlayerServerId(NetworkGetEntityOwner(GetPlayerPed(-1)))

Citizen.CreateThread(function()
 	while true do
	    Citizen.Wait(0)

	    AllowPauseMenuWhenDeadThisFrame()

	    for _, iter in ipairs({1, 2, 3, 4, 6, 7, 8, 9, 13, 17, 18}) do -- 6
			HideHudComponentThisFrame(iter)
		end

		local playerPed = PlayerPedId()
		local show = false
		local pid = PlayerId()

		if IsPedBeingStunned(playerPed) then
			SetPedMinGroundTimeForStungun(playerPed, 6000)
		end

		local inVehicle = IsPedInAnyVehicle(playerPed, false)
		if not show then
			HideHudComponentThisFrame(14)
			DisplayAmmoThisFrame(false)
			local aiming, shooting = IsControlPressed(0, 25), IsPedShooting(playerPed)
			if aiming or shooting then
				DisableControlAction(1, 29, true)
				if shooting and not aiming then
					isShooting = true
					aimTimer = 0
				else
					isShooting = false
				end

				if not isAiming then
					isAiming = true

					lastCamera = GetFollowPedCamViewMode()
					if lastCamera ~= 4 then
						SetFollowPedCamViewMode(4)
					end
				elseif GetFollowPedCamViewMode() ~= 4 then
					SetFollowPedCamViewMode(4)
				end
			elseif isAiming then
				local off = true
				if isShooting then
					off = false

					aimTimer = aimTimer + 20
					if aimTimer == 3000 then
						isShooting = false
						aimTimer = 0
						off = true
					end
				end

				if off then
					isAiming = false
					if lastCamera ~= 4 then
						SetFollowPedCamViewMode(lastCamera)
					end
				end
			elseif show ~= nil and not inVehicle then
				DisableControlAction(0, 24, true)
				DisableControlAction(0, 140, true)
				DisableControlAction(0, 141, true)
				DisableControlAction(0, 142, true)
				DisableControlAction(0, 257, true)
				DisableControlAction(0, 263, true)
				DisableControlAction(0, 264, true)
				DisableControlAction(0, 305, true)
			end
		end

		local cc, cv = Config.Density.OneSync.CitizenDefault, Config.Density.OneSync.VehicleDefault

		if inVehicle then
			local vehicle = GetVehiclePedIsIn(playerPed, false)
			SetPlayerHealthRechargeMultiplier(pid, 0.0)
			if DoesVehicleHaveWeapons(vehicle) == 1 then
				local vehicleWeapon, vehicleWeaponHash = GetCurrentPedVehicleWeapon(playerPed)
				if vehicleWeapon == 1 then
					DisableVehicleWeapon(true, vehicleWeaponHash, vehicle, playerPed)
					SetCurrentPedVehicleWeapon(playerPed, `WEAPON_UNARMED`)
				end
			end

			if (GetPedInVehicleSeat(vehicle, -1) == playerPed) then
				SetPlayerCanDoDriveBy(pid, false)
			else
				if DisableShuffle and GetPedInVehicleSeat(vehicle, 0) == playerPed and GetIsTaskActive(playerPed, 165) then
					SetPedIntoVehicle(playerPed, vehicle, 0)
				end
				if candodriveby then
					if GetEntitySpeed(vehicle) > 14 then
						SetPlayerCanDoDriveBy(pid, false)
					else
						SetPlayerCanDoDriveBy(pid, true)
					end
				else
					SetPlayerCanDoDriveBy(pid, false)
				end
			end
		end

		SetPedDensityMultiplierThisFrame(cc)
		SetScenarioPedDensityMultiplierThisFrame(cc, cc)
		SetVehicleDensityMultiplierThisFrame(cv)
		SetRandomVehicleDensityMultiplierThisFrame(cv)
		SetParkedVehicleDensityMultiplierThisFrame(cv)

		SetCreateRandomCops(false)
	    SetCreateRandomCopsNotOnScenarios(false)
		SetCreateRandomCopsOnScenarios(false)
	    SetNumberOfParkedVehicles(0)

		if IsPedArmed(playerPed, 6) then
	        DisableControlAction(1, 140, true)
	        DisableControlAction(1, 141, true)
	        DisableControlAction(1, 142, true)
	        DisableControlAction(1, 305, true)
	        DisableControlAction(1, 29, true)
	    end

	    DisablePlayerVehicleRewards(pid)

		N_0xb9449845f73f5e9c("SHIFT_CORONA_DESC")
	    PushScaleformMovieFunctionParameterBool(true)
	    PopScaleformMovieFunction()
	    N_0xb9449845f73f5e9c("SET_HEADER_TITLE")
	    PushScaleformMovieFunctionParameterString(Config.World["TITLE"])
	    PushScaleformMovieFunctionParameterBool(true)
	    PushScaleformMovieFunctionParameterString(Config.World["SUBTITLE"])
	    PushScaleformMovieFunctionParameterBool(true)
	    PopScaleformMovieFunctionVoid()
  	end
end)

Citizen.CreateThread(function()
 	while true do
	    Citizen.Wait(1)
	    RemoveAllPickupsOfType(0x20796a82) -- Pistol Ammo
	   	RemoveAllPickupsOfType(0x43AAEAE6) -- Pistol Ammo
	    RemoveAllPickupsOfType(0xe4bd2fc6) -- Rifle Ammo
	    RemoveAllPickupsOfType(0xE5EB8146) -- Rifle Ammo
	    RemoveAllPickupsOfType(0x77f3f2dd) -- Shotgun Ammo
	    RemoveAllPickupsOfType(0x2D5CE030) -- Shotgun Ammo
	    RemoveAllPickupsOfType(0x116fc4e6) -- SMG Ammo
	    RemoveAllPickupsOfType(0xFD4AE5E5) -- SMG Ammo
	end
end)


Citizen.CreateThread(function()
	StatSetProfileSetting(226, 0)
	for key, value in pairs(Config.Visuals) do
		SetVisualSettingFloat(key, value)
	end

	for i = 1, 15 do
	    EnableDispatchService(i, false)
	end

	for i, v in ipairs(Config.Scenarios) do
	  	SetScenarioTypeEnabled(v, false)
	end

	SetPedInfiniteAmmoClip(PlayerPedId(), false)
	SetEntityProofs(GetPlayerPed(-1), false, true, true, false, false, false, false, false)	

	SwitchTrainTrack(0, true)
	SwitchTrainTrack(3, true)
	SetTrainTrackSpawnFrequency(0, 120000)
	SetRandomTrains(1)

	for _, info in pairs(Config.Blips) do
	    info.blip = AddBlipForCoord(info.x, info.y, info.z)
	    SetBlipSprite(info.blip, info.id)
	    SetBlipDisplay(info.blip, 4)
	    SetBlipScale(info.blip, 0.7)
	    SetBlipColour(info.blip, info.colour)
	    SetBlipAsShortRange(info.blip, true)
		BeginTextCommandSetBlipName("STRING")
	    AddTextComponentString(info.title)
	    EndTextCommandSetBlipName(info.blip)
    end

    while not NetworkIsPlayerActive(PlayerId()) do
		Citizen.Wait(100)
	end
	while true do
		Citizen.Wait(1000)
		for _, ped in ipairs(ESX.Game.GetPeds()) do
			SetPedDropsWeaponsWhenDead(ped, false)
		end
	end
end)

Citizen.CreateThread(function()
	while true do
		Citizen.Wait(0)
		if Ped.Active then
			if DoesEntityExist(Ped.Id) then
				local status, weapon = GetCurrentPedWeapon(Ped.Id, true)
				if status == 1 then
					if IsPedShooting(Ped.Id) then
						local inVehicle = IsPedInAnyVehicle(Ped.Id, false)

						local recoil = Config.Recoils[weapon]
						if recoil > 0 then
							local i, tv = (inVehicle and 2 or 1), 0
							if GetFollowPedCamViewMode() ~= 4 then
								repeat
									SetGameplayCamRelativePitch(GetGameplayCamRelativePitch() + 0.1, 0.2)
									tv = tv + 0.1
									Citizen.Wait(0)
								until tv >= recoil
							else
								repeat
									local t = GetRandomFloatInRange(0.1, recoil)
									SetGameplayCamRelativePitch(GetGameplayCamRelativePitch() + t, (recoil > 0.1 and 1.2 or 0.333))
									tv = tv + t
									Citizen.Wait(0)
								until tv >= recoil
							end
						end
						local effect = Config.Effects[weapon]
						if effect > 0 then
							ShakeGameplayCam('SMALL_EXPLOSION_SHAKE', (inVehicle and (effect * 3) or effect))
						end
					end
				end
			end
		end
	end
end)

Citizen.CreateThread(function()
    while true do
        for _, scgrp in next, Config.Scenario_Groups do
            SetScenarioGroupEnabled(scgrp, false)
        end
        for _, model in next, Config.Suppressed_Models do
            SetVehicleModelIsSuppressed(GetHashKey(model), true)
        end
        Wait(10000)
    end
end)

Citizen.CreateThread(function()
	while true do
		Citizen.Wait(300)
		Ped.Id = PlayerPedId()
		Ped.RealId = PlayerId()
		Ped.Active = true
		Ped.Ped = GetPlayerPed(-1)
		if not IsEntityDead(Ped.Id) then
			Ped.Alive = true
			Ped.Available = (Ped.Alive)
			Ped.Visible = IsEntityVisible(Ped.Id)
			Ped.OnFoot = IsPedOnFoot(Ped.Id)
			Ped.Coords = GetEntityCoords(Ped.Ped)
			Ped.PhoneVisible = exports['gcphone']:getMenuIsOpen()
		else
			Ped.Alive = false
			Ped.Available = false
			Ped.Visible = IsEntityVisible(Ped.Id)
			Ped.OnFoot = true
			Ped.Collection = false
			Ped.PhoneVisible = false
		end
		if Status then
			if IsPedInAnyVehicle(Ped.Id, false) then
				Ped.InVehicle = true
				Ped.Vehicle = GetVehiclePedIsIn(Ped.Id, false)
				Ped.VehicleClass = GetVehicleClass(Ped.Vehicle)
				Ped.VehicleStopped = IsVehicleStopped(Ped.Vehicle)
				Ped.VehicleEngine = GetIsVehicleEngineRunning(Ped.Vehicle)
				Ped.VehicleCurrentGear = GetVehicleCurrentGear(Ped.Vehicle)
				Ped.VehicleHighGear = GetVehicleHighGear(Ped.Vehicle)
				Ped.Driver = GetPedInVehicleSeat(GetVehiclePedIsIn(Ped.Id, false), -1) == Ped.Id
				Ped.Zone = GetNameOfZone(Ped.Coords.x, Ped.Coords.y, Ped.Coords.z)
				for k, v in pairs(Config.Directions) do
					Ped.Direction = GetEntityHeading(Ped.Id)
					if math.abs(Ped.Direction - k) < 22.5 then
						Ped.Direction = v
						break
					end
				end
				Ped.StreetLabel.zone = (Config.Zones[Ped.Zone:upper()] or Ped.Zone:upper())
				Ped.StreetLabel.street = GetStreetsCustom(Ped.Coords)
				Ped.StreetLabel.direction = (Ped.Direction or 'N')
				Ped.CurrentTimeHours = GetClockHours()
				if Ped.CurrentTimeHours <= 9 then
					Ped.CurrentTimeHours = '0'..Ped.CurrentTimeHours
				end
				Ped.CurrentTimeMinutes = GetClockMinutes()
				if Ped.CurrentTimeMinutes <= 9 then
					Ped.CurrentTimeMinutes = '0'..Ped.CurrentTimeMinutes
				end
				Ped.ShowGears = true
				if Ped.VehicleClass == 13 or Ped.VehicleClass == 14 or Ped.VehicleClass == 15 or Ped.VehicleClass == 16 then
					Ped.ShowGears = false
				end
				Ped.currentFuel = math.ceil(65 * GetVehicleFuelLevel(Ped.Vehicle) / GetVehicleHandlingFloat(Ped.Vehicle,"CHandlingData","fPetrolTankVolume"))
			else
				Ped.Health = GetEntityHealth(Ped.Id)
				Ped.Armor = GetPedArmour(Ped.Id)
				Ped.Underwater = IsPedSwimmingUnderWater(Ped.Id)
				Ped.Stamina = GetPlayerSprintStaminaRemaining(Ped.RealId)

				Ped.UnderwaterTime = GetPlayerUnderwaterTimeRemaining(Ped.RealId)
				if Ped.UnderwaterTime < 0.0 then
					Ped.UnderwaterTime = 0.0
				end
				Ped.InVehicle = false
				Ped.Vehicle = nil
			end
		else
			Ped.Vehicle = nil
		end
	end
end)

Citizen.CreateThread(function()
	local currSpeed = 0.0
    local prevVelocity = {x = 0.0, y = 0.0, z = 0.0}
	while true do
		Citizen.Wait(5)
		if allowid and idplayer ~= nil then
			drawTxt(0.688, 1.450, 1.0,1.0,0.55, "ID: ".. idplayer .. '', 255,140,0, 180)
		end
		if Ped.Vehicle then
			local RPMScale = 0
			if (Ped.VehicleClass >= 0 and Ped.VehicleClass <= 5) or (Ped.VehicleClass >= 9 and Ped.VehicleClass <= 12) or Ped.VehicleClass == 17 or Ped.VehicleClass == 18 or Ped.VehicleClass == 20 then
				RPMScale = 7000
			elseif Ped.VehicleClass == 6 then
				RPMScale = 7500
			elseif Ped.VehicleClass == 7 then
				RPMScale = 8000
			elseif Ped.VehicleClass == 8 then
				RPMScale = 11000
			elseif Ped.VehicleClass == 15 or Ped.VehicleClass == 16 then
				RPMScale = -1
			end

			local Speed = math.floor(GetEntitySpeed(Ped.Vehicle) * 3.6 + 0.5)
			if RPMTime <= GetGameTimer() then
				local r = GetVehicleCurrentRpm(Ped.Vehicle)
				if not Ped.VehicleEngine then
					r = 0
				elseif r > 0.99 then
					r = r * 100
					r = r + math.random(-2,2)

					r = r / 100
					if r < 0.12 then
						r = 0.12
					end
				else
					r = r - 0.1
				end

				RPM = math.floor(RPMScale * r + 0.5)
				if RPM < 0 then
					RPM = 0
				elseif Speed == 0.0 and r ~= 0 then
					RPM = math.random(RPM, (RPM + 50))
				end

				RPM = math.floor(RPM / 10) * 10
				RPMTime = GetGameTimer() + 50
			end

			if displayStreet and Ped.StreetLabel.direction then
				drawTxt(0.515, 1.30, 1.0, 1.0, 0.33, Ped.StreetLabel.zone, 255,140,0, 255)
				drawTxt(0.515, 1.28, 1.0, 1.0, 0.4, Ped.StreetLabel.street, 255,165,0, 255)
				drawTxt((Ped.StreetLabel.direction:len() > 1 and 0.650 or 0.650), 1.30, 1.014, 1.0, 0.33, '~o~'..Ped.StreetLabel.direction..'~o~', 255, 255, 255, 255)
			end
			if (GetPedInVehicleSeat(Ped.Vehicle, -1) == Ped.Id) then
				if resetSpeedOnEnter then
				    maxSpeed = GetVehicleHandlingFloat(Ped.Vehicle,"CHandlingData","fInitialDriveMaxFlatVel")
				    SetEntityMaxSpeed(Ped.Vehicle, maxSpeed)
				    resetSpeedOnEnter = false
				end
				if (checkCruiseLock > GetEntitySpeed(Ped.Vehicle) + 0.5  )  and lockSpeed and enabled then
				    maxSpeed = GetVehicleHandlingFloat(Ped.Vehicle,"CHandlingData","fInitialDriveMaxFlatVel")
				    SetEntityMaxSpeed(Ped.Vehicle, maxSpeed)
				    ESX.ShowNotification('~r~Tempomat wyłączony')
				    enabled = false
				end
				if IsControlJustReleased(0,246) and enabled and not lockSpeed and not IsControlPressed(0,131) then
				    maxSpeed = GetVehicleHandlingFloat(Ped.Vehicle,"CHandlingData","fInitialDriveMaxFlatVel")
				    SetEntityMaxSpeed(Ped.Vehicle, maxSpeed)
				    ESX.ShowNotification('~r~Tempomat wyłączony')
				    enabled = false
				elseif IsControlJustReleased(0,246) and not enabled and not IsControlPressed(0,131) then
				   	cruise = GetEntitySpeed(Ped.Vehicle)
				    checkCruiseLock = GetEntitySpeed(Ped.Vehicle)
				    local checkCruise = math.floor(cruise * 3.6 + 0.5)
					if checkCruise > minSpeed then
					    SetEntityMaxSpeed(Ped.Vehicle, cruise)
					    enabled = true
					    cruise = math.floor(cruise * 3.6 + 0.5) + 1
					    ESX.ShowNotification('~g~Tempomat ustawiony na ~y~'..cruise..' km/h.')
					else
					    ESX.ShowNotification('~g~Tempomat ustawiony na ~y~'..cruise..' km/h.')
					end
				end

				if IsControlJustPressed(0, 311) then
				    if not exports['gcphone']:getMenuIsOpen() then
				        EngineToggle(Ped.Ped)
				 	end
				elseif IsPedInAnyVehicle(Ped.Ped, false) then
				    if IsControlPressed(2, 75) then
				        if Ped.Vehicle and DoesEntityExist(Ped.Vehicle) then
				           	local engine = GetIsVehicleEngineRunning(Ped.Vehicle)
				            repeat
				             	Citizen.Wait(0)
				                if engine then
				                    SetVehicleEngineOn(Ped.Vehicle, true, true, true)
				                end
				            until not IsPedInAnyVehicle(Ped.Ped, false)
				        end
				    end
				end
			end
            local prevSpeed = currSpeed
            currSpeed = GetEntitySpeed(Ped.Vehicle)
            SetPedConfigFlag(PlayerPedId(), 32, true) 
           	if IsControlJustReleased(0, 305) and (GetLastInputMethod(0)) and Ped.VehicleClass ~= 8 then
	            seatbeltIsOn = not seatbeltIsOn
	            if seatbeltIsOn then
					TriggerServerEvent('SANDY_InteractSound_SV:PlayWithinDistance', 1, 'seaton', 0.3)
				else
					TriggerServerEvent('SANDY_InteractSound_SV:PlayWithinDistance', 1, 'seatoff', 0.3)
	            end
	        end
	        if not seatbeltIsOn then 
	        	local vehIsMovingFwd = GetEntitySpeedVector(Ped.Vehicle, true).y > 1.0
				local vehAcc = (prevSpeed - currSpeed) / GetFrameTime() 
	        	if Ped.VehicleClass ~= 8 then
	    			while not HasStreamedTextureDictLoaded('mpinventory') do
	    				RequestStreamedTextureDict('mpinventory')
	        			Citizen.Wait(10)
					end
					DrawSprite('mpinventory', 'mp_specitem_ped', 0.025, 0.950, 0.020, 0.035, 0.0, 255, 0, 0, 255)
				end
	            if (vehIsMovingFwd and (prevSpeed > (45.0/2.237)) and (vehAcc > (70.0*9.81))) then
	                SetEntityCoords(Ped.Ped, Ped.Coords.x, Ped.Coords.y, Ped.Coords.z - 0.47, true, true, true)
	                SetEntityVelocity(Ped.Ped, prevVelocity.x, prevVelocity.y, prevVelocity.z)
	                Citizen.Wait(1)
					SetPedToRagdoll(Ped.Ped, 1000, 1000, 0, 0, 0, 0)
				else
	                prevVelocity = GetEntityVelocity(Ped.Vehicle)
	            end
	        else
				DisableControlAction(0, 75)
			end
			if Ped.VehicleCurrentGear == 0 then
				Ped.VehicleCurrentGear = 'R'
				if Speed > 0.0 then
					Speed = Speed * -1
				end
			end
			local UI = { x = 0.0, y = 0.0 } --GetMinimapAnchor()
			if RPMScale > 0 then
				drawTxt(UI.x + 0.618, 	UI.y + 1.435, 1.0,1.0,0.45 , "~" .. (RPM > (RPMScale - 1000) and "r" or "w") .. "~" .. RPM, 255, 255, 255, 255)
				drawTxt(UI.x + 0.640, 	UI.y + 1.4400, 1.0,1.0,0.35, "~w~RPM~y~", 255, 255, 255, 255)
			end
			drawTxt(UI.x + 0.636, 	UI.y + 1.3200, 1.0,1.0,0.35, Ped.CurrentTimeHours..':'..Ped.CurrentTimeMinutes, 255, 140, 0, 255)
			drawTxt(UI.x + 0.62, 	UI.y + 1.41, 1.0,1.0,0.5 , "~" .. (Speed > 85 and (Speed > 155 and "r" or "y") or "w") .. "~" .. Speed, 255, 255, 255, 255)
			drawTxt(UI.x + 0.637, 	UI.y + 1.4165, 1.0,1.0,0.35, "~" .. "w~KM/H", 255, 255, 255, 255)
			if Ped.VehicleClass ~= 13 then
				drawTxt(UI.x + 0.640, 	UI.y + 1.3930, 1.0,1.0,0.35, "~" .. "w~FUEL", 255, 255, 255, 255)
				drawTxt(UI.x + 0.628, 	UI.y + 1.3930, 1.0,1.0,0.35, "~" .. (Ped.currentFuel < 25 and (Ped.currentFuel < 10 and "r" or "y") or "w") .. "~" .. Ped.currentFuel, 255, 255, 255, 255)
			end
			if Ped.ShowGears then
				drawRct(UI.x + 0.155, 	UI.y + 0.807, 0.010,0.161,0,0,0,100)
				drawTxt(UI.x + 0.657, 	UI.y + 1.440, 1.0,1.0,0.35, 'R', 255, 255, 255, 255)
				drawTxt(UI.x + 0.657, 	UI.y + 1.420, 1.0,1.0,0.35, '1', 255, 255, 255, 255)
				drawTxt(UI.x + 0.657, 	UI.y + 1.400, 1.0,1.0,0.35, '2', 255, 255, 255, 255)
				drawTxt(UI.x + 0.657, 	UI.y + 1.380, 1.0,1.0,0.35, '3', 255, 255, 255, 255)
				drawTxt(UI.x + 0.657, 	UI.y + 1.360, 1.0,1.0,0.35, '4', 255, 255, 255, 255)
				drawTxt(UI.x + 0.657, 	UI.y + 1.340, 1.0,1.0,0.35, '5', 255, 255, 255, 255)
				drawTxt(UI.x + 0.657, 	UI.y + 1.320, 1.0,1.0,0.35, '6', 255, 255, 255, 255)
				if Ped.VehicleHighGear >= 7 then
					drawTxt(UI.x + 0.657, 	UI.y + 1.300, 1.0,1.0,0.35, '7', 255, 255, 255, 255)
				end
				if Ped.VehicleCurrentGear == 'R' then
					drawTxt(UI.x + 0.657, 	UI.y + 1.440, 1.0,1.0,0.35, Ped.VehicleCurrentGear, 255, 0, 0, 255)
				end	
				if Ped.VehicleCurrentGear == 1 then
					drawTxt(UI.x + 0.657, 	UI.y + 1.420, 1.0,1.0,0.35, Ped.VehicleCurrentGear, 255, 0, 0, 255)	
				end
				if Ped.VehicleCurrentGear == 2 then
					drawTxt(UI.x + 0.657, 	UI.y + 1.400, 1.0,1.0,0.35, Ped.VehicleCurrentGear, 255, 0, 0, 255)
				end
				if Ped.VehicleCurrentGear == 3 then
					drawTxt(UI.x + 0.657, 	UI.y + 1.380, 1.0,1.0,0.35, Ped.VehicleCurrentGear, 255, 0, 0, 255)
				end
				if Ped.VehicleCurrentGear == 4 then
					drawTxt(UI.x + 0.657, 	UI.y + 1.360, 1.0,1.0,0.35, Ped.VehicleCurrentGear, 255, 0, 0, 255)
				end
				if Ped.VehicleCurrentGear == 5 then
					drawTxt(UI.x + 0.657, 	UI.y + 1.340, 1.0,1.0,0.35, Ped.VehicleCurrentGear, 255, 0, 0, 255)
				end
				if Ped.VehicleCurrentGear == 6 then
					drawTxt(UI.x + 0.657, 	UI.y + 1.320, 1.0,1.0,0.35, Ped.VehicleCurrentGear, 255, 0, 0, 255)
				end
				if Ped.VehicleCurrentGear == 7 then
					drawTxt(UI.x + 0.657, 	UI.y + 1.300, 1.0,1.0,0.35, Ped.VehicleCurrentGear, 255, 0, 0, 255)
				end
			end
		else
			seatbeltIsOn = false
			resetSpeedOnEnter = true
			enabled = false
		end
    end
end)

Citizen.CreateThread(function()
	while true do
        Citizen.Wait(60000)
        SetRP()
    end
end)

Citizen.CreateThread(function()
	while true do
		Citizen.Wait(5)
		if (GetDistanceBetweenCoords(Ped.Coords, Config.Characterchange.x, Config.Characterchange.y, Config.Characterchange.z, true) < 10) then
		    DrawMarker(1, Config.Characterchange.x, Config.Characterchange.y, Config.Characterchange.z-0.90, 0, 0, 0, 0, 0, 0, 1.5, 1.5, 1.0, 0, 255, 0, 155, 0, 0, 2, 0, 0, 0, 0)
			if (GetDistanceBetweenCoords(Ped.Coords,  Config.Characterchange.x, Config.Characterchange.y, Config.Characterchange.z, true) < 2.0) then
			    if IsControlPressed(1, 51) and not ESX.UI.Menu.IsOpen('default', GetCurrentResourceName(), 'changecharacter_actions') and (GetGameTimer() - GUI.Time) > 1000 then
			    	GUI.Time = GetGameTimer()
			    	Characterchangemenu()
			    	incharacterselection = true
			    end
			end
		end
	end
end)

Citizen.CreateThread(function()
	while true do
		Citizen.Wait(0)
		if incharacterselection then
			DisableAllControlActions(0)
			EnableControlAction(0, 18, true)
			EnableControlAction(0, 27, true)
			EnableControlAction(0, 172, true)
			EnableControlAction(0, 173, true)
			EnableControlAction(0, 174, true)
			EnableControlAction(0, 175, true)
			EnableControlAction(0, 187, true)
			EnableControlAction(0, 188, true)
			EnableControlAction(0, 189, true)
			EnableControlAction(0, 190, true)
			EnableControlAction(0, 299, true)
			EnableControlAction(0, 300, true)
			EnableControlAction(0, 307, true)
			EnableControlAction(0, 308, true)
		else
			Citizen.Wait(500)
		end
	end
end)

function Characterchangemenu()
	ESX.ShowNotification('~r~Trwa Ladowanie Postaci!')
	FreezeEntityPosition(Ped.Id, true)
	SetPlayerInvincible(PlayerId(), true)
   	SetEntityInvincible(PlayerPedId(), true)
	ESX.UI.Menu.CloseAll()
	ESX.TriggerServerCallback('sandycharacter:fetchcharacters', function(characters)
		local elements = {}
		if characters[1] ~= nil and characters[1].identifier ~= PlayerData.identifier then
			table.insert(elements, {label = characters[1].firstname..' '..characters[1].lastname, value = '1'})
		end
		if characters[2] ~= nil and characters[2].identifier ~= PlayerData.identifier then
			table.insert(elements, {label = characters[2].firstname..' '..characters[2].lastname, value = '2'})
		end
		if characters[3] ~= nil and characters[3].identifier ~= PlayerData.identifier then
			table.insert(elements, {label = characters[3].firstname..' '..characters[3].lastname, value = '3'})
		end
		if characters[4] ~= nil and characters[4].identifier ~= PlayerData.identifier then
			table.insert(elements, {label = characters[4].firstname..' '..characters[4].lastname, value = '4'})
		end

	    ESX.UI.Menu.Open(
	    'default', GetCurrentResourceName(), 'changecharacter_actions',
	    {
	      title    = 'Samolot',
	      align    = 'center',
	      elements = elements
	    },
	    function(data, menu)
	    	TriggerServerEvent('sandycharacter:selectcharacter', data.current.value)
	    	FreezeEntityPosition(Ped.Id, false)
	    	SetPlayerInvincible(PlayerId(), false)
    		SetEntityInvincible(PlayerPedId(), false)
	    	menu.close()
	    	incharacterselection = false
	    end,
	    function(data, menu)
	    end) 
	end)
end

RegisterNetEvent('sandycharacter:spawncharacter')
AddEventHandler('sandycharacter:spawncharacter', function()
	DoScreenFadeOut(50)
	Citizen.Wait(1000)
	TriggerServerEvent('es:firstJoinProper')
	Citizen.Wait(1000)
	TriggerEvent('es:allowedToSpawn')
    SetTimecycleModifier('default')
    TriggerEvent('esx_customui:toggle',true)
    Wait(1000)
    TriggerEvent('esx_jail:shouldbeinjail')
    reloadskin()
    Wait(3000)
    ESX.TriggerServerCallback('esx_ambulancejob:getDeathStatus', function(isDead)
        if isDead then
            SetEntityHealth(GetPlayerPed(-1), 0)
        end
    end)
    DoScreenFadeIn(50)
end)

RegisterCommand('shuff', function(source, args, raw)
	Citizen.CreateThread(SeatShuffle)
end, false)

function isjobWhitelisted(job)
	for _, whitelistedJob in pairs(Config.Drivebyjobs) do
		if job == whitelistedJob then
			return true
		end
	end
	return false
end

function SetRP()
    local name = GetPlayerName(PlayerId())
    local id = GetPlayerServerId(PlayerId())
	local policja = exports['esx_scoreboard']:counter('police')
	local mechanicy = exports['esx_scoreboard']:counter('mecano')
	local medycy = exports['esx_scoreboard']:counter('ambulance')
    SetDiscordAppId(Config.World["APPID"])
	SetDiscordRichPresenceAsset(Config.World["ASSET"])
	SetDiscordRichPresenceAssetSmall(Config.World["ASSET"])
	SetDiscordRichPresenceAssetSmallText('Służby: ' .. policja .. ' LSPD | ' .. medycy .. ' EMS | ' .. mechanicy .. ' LSC')
	SetDiscordRichPresenceAssetText('https://discord.gg/Qs7rpr7')
	SetRichPresence(name .. ', ID: ' .. id .. ' - ' .. #GetActivePlayers() .. '/100 graczy')
end

function GetStreetsCustom(coords)
	local s1, s2 = Citizen.InvokeNative(0x2EB41072B4C1E4C0, coords.x, coords.y, coords.z, Citizen.PointerValueInt(), Citizen.PointerValueInt())
	local street1, street2 = GetStreetNameFromHashKey(s1), GetStreetNameFromHashKey(s2)
	return "~w~" .. street1 .. (street2 ~= "" and " ".."~s~ | ".." " .. street2 or "")
end

function GetMinimapAnchor()
	SetScriptGfxAlign(string.byte('L'), string.byte('B'))
	local minimapTopX, minimapTopY = GetScriptGfxPosition(-0.0045, 0.002 + (-0.188888))
	ResetScriptGfxAlign()

	local w, h = GetActiveScreenResolution()
	return { x = w * minimapTopX, y = h * minimapTopY }
end

function drawTxt(x, y, width, height, scale, text, r, g, b, a)
    SetTextFont(4)
    SetTextProportional(0)
    SetTextScale(scale, scale)
    SetTextColour(r, g, b, a)
    SetTextDropShadow(0, 0, 0, 0,255)
    SetTextEdge(2, 0, 0, 0, 255)
    SetTextDropShadow()
    SetTextOutline()

    SetTextEntry("STRING")
    AddTextComponentString(text)
    DrawText(x - width / 2, y - height / 2 + 0.005)
end

function drawRct(x,y,width,height,r,g,b,a)
	DrawRect(x + width/2, y + height/2, width, height, r, g, b, a)
end

function DisableSeatShuffle(sstatus)
	DisableShuffle = sstatus
end

function SeatShuffle()
	local ped = PlayerPedId()
	if IsPedInAnyVehicle(ped, false) then
		local vehicle = GetVehiclePedIsIn(ped, false)
		if GetPedInVehicleSeat(vehicle, 0) == ped then
			DisableSeatShuffle(false)
			Citizen.Wait(5000)
			DisableSeatShuffle(true)
		else
			TaskShuffleToNextVehicleSeat(ped, vehicle)
		end
	end
end

function EngineToggle(playerPed)
	local vehicle = GetVehiclePedIsIn(playerPed, false)
	if vehicle and vehicle ~= 0 and GetPedInVehicleSeat(vehicle, -1) == playerPed then

		local status = IsVehicleEngineOn(vehicle)
		if not status then
			SetVehicleEngineOn(vehicle, true, false, true)
			ESX.ShowNotification('Silnik ~g~włączony!')
		else
			SetVehicleEngineOn(vehicle, false, false, true)
			ESX.ShowNotification('Silnik ~r~wyłączony!')
		end
	end
end

function reloadskin()
    SetPlayerHealthRechargeMultiplier(PlayerId(), 0.0)
    Wait(5000)
    ESX.TriggerServerCallback('esx_skin:getPlayerSkin', function(skin)
        TriggerEvent('skinchanger:loadSkin', skin)
    end)
    TriggerEvent('esx_tattooshop:refreshTattoos')
end

function GetPedData()
	return Ped
end